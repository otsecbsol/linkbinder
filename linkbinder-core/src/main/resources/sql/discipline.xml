<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016 OPEN TONE Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="discipline">

<resultMap id="result" class="jp.co.opentone.bsol.linkbinder.dto.Discipline">
    <result property="id"                                       column="id" />
    <result property="projectId"                                column="project_id" />
    <result property="projectNameE"                             column="project_name_e" />
    <result property="disciplineCd"                             column="discipline_cd" />
    <result property="name"                                     column="name" />
    <result property="createdBy.empNo"                          column="created_by" />
    <result property="createdBy.nameE"                          column="created_by_name" />
    <result property="createdAt"                                column="created_at" />
    <result property="updatedBy.empNo"                          column="updated_by" />
    <result property="updatedBy.nameE"                          column="updated_by_name" />
    <result property="updatedAt"                                column="updated_at" />
    <result property="versionNo"                                column="version_no" />
    <result property="deleteNo"                                 column="delete_no" />
</resultMap>
<resultMap id="resultForUpdate" class="jp.co.opentone.bsol.linkbinder.dto.Discipline">
    <result property="versionNo"             column="version_no" />
</resultMap>

  <!--  find,countで共通的に利用するFROM, WHERE句 -->
  <sql id="findFromWhere">
    FROM
      v_discipline
    WHERE
     project_id = #projectId#
     <dynamic>
       <isNotNull prepend="AND" property="disciplineCd">
         discipline_cd like #disciplineCd# || '%' {escape #escapeChar#}
       </isNotNull>
       <isNotNull prepend="AND" property="name">
         name       like #name# || '%' {escape #escapeChar#}
       </isNotNull>
     </dynamic>
  </sql>


  <select id="find" resultMap="result">
    SELECT
        id,
        project_id,
        project_name_e,
        discipline_cd,
        name,
        created_by,
        created_by_name,
        created_at,
        updated_by,
        updated_by_name,
        updated_at,
        version_no,
        delete_no
    <include refid="findFromWhere"/>
    ORDER BY id
  </select>

  <select id="count" resultClass="int">
    SELECT
      COUNT(id)
    <include refid="findFromWhere"/>
  </select>

  <select id="findById" resultMap="result">
    SELECT
      id,
      project_id,
      project_name_e,
      discipline_cd,
      name,
      created_by,
      created_by_name,
      created_at,
      updated_by,
      updated_by_name,
      updated_at,
      version_no,
      delete_no
    FROM
      v_discipline
    WHERE
      id = #id#
  </select>

  <insert id="create">
    <selectKey resultClass="long" keyProperty="id">
      SELECT s_discipline_id.NEXTVAL AS id FROM dual
    </selectKey>
    INSERT INTO discipline (
      id,
      project_id,
      discipline_cd,
      name,
      created_by,
      updated_by
    ) VALUES (
      #id#,
      #projectId#,
      #disciplineCd#,
      #name#,
      #createdBy.empNo#,
      #updatedBy.empNo#
    )
  </insert>

  <update id="update">
    UPDATE discipline
    SET
      updated_by = #updatedBy.empNo#,
      updated_at = SYSTIMESTAMP,
      version_no = (version_no + 1)
      <dynamic>
        <isNotNull prepend="," property="disciplineCd">
          discipline_cd = #disciplineCd#
        </isNotNull>
        <isNotNull prepend="," property="name" >
          name          = #name#
        </isNotNull>
      </dynamic>
    WHERE
      id = #id#
  </update>

  <select id="findByIdForUpdate" resultMap="resultForUpdate">
    SELECT
      version_no
    FROM
      discipline
    WHERE
      id = #id#
    FOR UPDATE
  </select>

  <update id="delete">
    UPDATE discipline
    SET
      updated_by = #updatedBy.empNo#,
      updated_at = SYSTIMESTAMP,
      version_no = (version_no + 1),
      delete_no  = s_discipline_dno.NEXTVAL
    WHERE
      id = #id#
  </update>

  <select id="findNotExistCorresponGroup" resultMap="result">
    SELECT
        id,
        project_id,
        project_name_e,
        discipline_cd,
        name,
        created_by,
        created_by_name,
        created_at,
        updated_by,
        updated_by_name,
        updated_at,
        version_no,
        delete_no
    FROM
      v_discipline
    WHERE
       id not in (
                  SELECT
                      discipline_id
                  FROM
                    correspon_group
                  WHERE
                     site_id = #siteId#
                  AND
                     delete_no = 0
                 )
    AND project_id = #projectId#
    order by id
  </select>

  <select id="countCheck" resultClass="int">
    SELECT
      count(id) cnt
    FROM
      discipline
    WHERE
      delete_no    = 0
    <dynamic>
      <isNotNull prepend="AND" property="projectId">
        project_id = #projectId#
      </isNotNull>
      <isNotNull prepend="AND" property="disciplineCd">
        discipline_cd    = #disciplineCd#
      </isNotNull>
      <isNotNull prepend="AND" property="id">
        id        <![CDATA[<>]]> #id#
      </isNotNull>
    </dynamic>
  </select>

</sqlMap>
