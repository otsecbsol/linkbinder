<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2016 OPEN TONE Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="site">

<resultMap id="result" class="jp.co.opentone.bsol.linkbinder.dto.Site">
  <result property="id"                        column="id"/>
  <result property="projectId"                 column="project_id"/>
  <result property="projectNameE"              column="project_name_e"/>
  <result property="siteCd"                    column="site_cd"/>
  <result property="name"                      column="name"/>
  <result property="createdBy.empNo"           column="created_by"/>
  <result property="createdBy.nameE"           column="created_by_name"/>
  <result property="createdAt"                 column="created_at"/>
  <result property="updatedBy.empNo"           column="updated_by"/>
  <result property="updatedBy.nameE"           column="updated_by_name"/>
  <result property="updatedAt"                 column="updated_at"/>
  <result property="versionNo"                 column="version_no"/>
  <result property="deleteNo"                  column="delete_no"/>
</resultMap>
<resultMap id="resultForUpdate" class="jp.co.opentone.bsol.linkbinder.dto.Site">
  <result property="versionNo"             column="version_no" />
</resultMap>

  <!--  find,countで共通的に利用するFROM, WHERE句 -->
  <sql id="findFromWhere">
    FROM
      v_site s
    <dynamic>
      <isEqual property="groupAdmin" compareValue="true">
        LEFT OUTER JOIN correspon_group g
        ON s.id = g.site_id LEFT OUTER JOIN correspon_group_user u
        ON g.id = u.correspon_group_id
      </isEqual>
    </dynamic>
    WHERE project_id = #projectId#
      <dynamic>
        <isNotNull prepend="AND" property="siteCd">
          s.site_cd    like #siteCd# || '%' {escape #escapeChar#}
        </isNotNull>
        <isNotNull prepend="AND" property="name">
          s.name       like #name# || '%' {escape #escapeChar#}
        </isNotNull>
        <isEqual prepend="AND" property="groupAdmin" compareValue="true" >
          u.emp_no = #searchUser.empNo#
          AND
          security_level = #searchUser.securityLevel#
        </isEqual>
      </dynamic>
  </sql>

  <select id="find" resultMap="result">
    SELECT
      DISTINCT
      s.id,
      s.project_id,
      s.project_name_e,
      s.site_cd,
      s.name,
      s.created_by,
      s.created_by_name,
      s.created_at,
      s.updated_by,
      s.updated_by_name,
      s.updated_at,
      s.version_no,
      s.delete_no
      <include refid="findFromWhere"/>
    ORDER BY id
  </select>

  <select id="count" resultClass="int">
    SELECT
      COUNT(id)
    FROM(
          SELECT
         DISTINCT
         s.id,
         s.project_id,
         s.project_name_e,
         s.site_cd,
         s.name,
         s.created_by,
         s.created_at,
         s.updated_by,
         s.updated_at,
         s.version_no,
         s.delete_no
         <include refid="findFromWhere"/>
        )
  </select>

  <select id="findById" resultMap="result">
    SELECT
     id,
     project_id,
     project_name_e,
     site_cd,
     name,
     created_by,
     created_by_name,
     created_at,
     updated_by,
     updated_by_name,
     updated_at,
     version_no,
     delete_no
   FROM
     v_site
   WHERE
    id = #id#
  </select>

  <update id="update">
    UPDATE site
    SET
      updated_by = #updatedBy.empNo#,
      updated_at = SYSTIMESTAMP,
      version_no = (version_no + 1)
      <dynamic>
        <isNotNull prepend="," property="siteCd">
          site_cd = #siteCd#
        </isNotNull>
        <isNotNull prepend="," property="name">
          name = #name#
        </isNotNull>
      </dynamic>
    WHERE
      id = #id#
  </update>

  <insert id="create">
    <selectKey resultClass="long" keyProperty="id">
      SELECT s_site_id.NEXTVAL AS id FROM dual
    </selectKey>
    INSERT INTO site(
      id,
      project_id,
      site_cd,
      name,
      created_by,
      updated_by
     ) VALUES (
       #id#,
       #projectId#,
       #siteCd#,
       #name#,
       #createdBy.empNo#,
       #updatedBy.empNo#
     )
  </insert>

  <select id="findByIdForUpdate" resultMap="resultForUpdate">
    SELECT
      version_no
    FROM
      site
    WHERE
      id = #id#
    FOR UPDATE
  </select>

  <update id="delete">
    UPDATE site
    SET
      updated_by = #updatedBy.empNo#,
      updated_at = SYSTIMESTAMP,
      version_no = (version_no + 1),
      delete_no  = s_site_dno.NEXTVAL
    WHERE
      id         = #id#
  </update>

  <select id="countCheck" resultClass="int">
    SELECT
      count(id) cnt
    FROM
      site
    WHERE
      delete_no    = 0
    <dynamic>
      <isNotNull prepend="AND" property="projectId">
        project_id = #projectId#
      </isNotNull>
      <isNotNull prepend="AND" property="siteCd">
        site_cd    = #siteCd#
      </isNotNull>
      <isNotNull prepend="AND" property="id">
        id        <![CDATA[<>]]> #id#
      </isNotNull>
    </dynamic>
  </select>
</sqlMap>